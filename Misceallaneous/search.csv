1545964747132,sub,0," "
1545964748083,add,0,"class Solution:
    def search(self, nums, target):
        """"""
        :type nums: List[int]
        :type target: int
        :rtype: int
        """"""
"
1545964748137,paste,0,"class Solution:
    def search(self, nums, target):
        """"""
        :type nums: List[int]
        :type target: int
        :rtype: int
        """"""
        "
1545964821370,add,152,"    "
1545964821705,add,156,"    "
1545964823745,add,160,w
1545964823888,add,161,h
1545964823977,add,162,i
1545964824053,add,163,l
1545964824137,add,164,e
1545964824641,sub,164,e
1545964824784,sub,163,l
1545964824979,sub,162,i
1545964825051,sub,161,h
1545964825481,sub,160,w
1545964828613,add,160,l
1545964828821,add,161,o
1545964828999,add,162," "
1545964829284,add,163,=
1545964829441,add,164," "
1545964830316,add,165,m
1545964830573,add,166,u
1545964830797,add,167,m
1545964831031,sub,167,m
1545964831181,sub,166,u
1545964831329,sub,165,m
1545964832734,add,165,0
1545964833590,add,166,"
        "
1545964834066,add,175,h
1545964834242,add,176,i
1545964834517,add,177," "
1545964834603,add,178,=
1545964834792,add,179," "
1545964835781,add,180,n
1545964836032,add,181,u
1545964836769,sub,181,u
1545964836926,sub,180,n
1545964837139,add,180,l
1545964837260,add,181,e
1545964837398,add,182,n
1545964837682,add,183,(
1545964837684,add,184,)
1545964837904,add,184,n
1545964838105,add,185,u
1545964838411,add,186,m
1545964838497,add,187,s
1545964841186,add,189," "
1545964841608,add,190,-
1545964841722,add,191," "
1545964841930,add,192,1
1545964842166,add,193,"
        "
1545964842446,add,202,w
1545964842571,add,203,h
1545964842731,add,204,i
1545964842799,add,205,l
1545964842918,add,206,e
1545964843080,add,207," "
1545964843253,add,208,l
1545964844006,add,209,o
1545964844179,add,210," "
1545964844679,add,211,<
1545964844822,add,212," "
1545964845044,add,213,h
1545964845593,add,214,i
1545964845984,add,215,:
1545964846216,add,216,"
        "
1545964846224,add,225,"    "
1545964859989,add,229,m
1545964860137,add,230,i
1545964860309,add,231," "
1545964860504,add,232,=
1545964860808,sub,232,=
1545964860958,sub,231," "
1545964861114,add,231,d
1545964861237,add,232," "
1545964861389,add,233,=
1545964861534,add,234," "
1545964862655,add,235,(
1545964862657,add,236,)
1545964862936,add,236,l
1545964863148,add,237,o
1545964863631,add,238," "
1545964863831,add,239,+
1545964863981,add,240," "
1545964864154,add,241,h
1545964864264,add,242,i
1545964865788,add,244," "
1545964866015,add,245,/
1545964866407,add,246,2
1545964866559,add,247," "
1545964867017,add,248,"
            "
1545964867663,sub,260," "
1545964867666,sub,257,"   "
1545964867857,sub,256," "
1545964867859,sub,253,"   "
1545964867997,sub,252," "
1545964868002,sub,249,"   "
1545964868161,sub,248,"
"
1545964868493,sub,247," "
1545964868656,sub,246,2
1545964868819,sub,245,/
1545964868973,sub,244," "
1545964869338,add,244,/
1545964869492,add,245,/
1545964869714,add,246,2
1545964869877,add,247,"
            "
1545964870364,add,260,i
1545964870525,add,261,f
1545964871194,add,262," "
1545964871769,add,263,(
1545964871771,add,264,)
1545964872215,add,264,m
1545964872516,add,265,i
1545964872669,add,266,d
1545964873083,add,267," "
1545964873525,add,268,=
1545964873666,add,269,=
1545964873779,add,270," "
1545964885695,add,264,n
1545964885948,add,265,u
1545964886164,add,266,m
1545964886278,add,267,s
1545964886574,add,268,[
1545964887996,add,272,]
1545964890227,sub,277,)
1545964891583,sub,263,(
1545964894225,add,276,t
1545964894924,add,277,arget
1545964895494,add,282,:
1545964896048,add,283,"
            "
1545964896056,add,296,"    "
1545964896421,add,300,r
1545964896465,add,301,e
1545964897341,add,302,turn
1545964897364,add,306," "
1545964897746,add,307,m
1545964897884,add,308,i
1545964897992,add,309,d
1545964898407,add,310,"
                "
1545964898413,sub,323,"    "
1545964907502,add,323,i
1545964907712,add,324,f
1545964908787,add,325," "
1545964908971,add,326,n
1545964909502,add,327,u
1545964909708,add,328,m
1545964909850,add,329,s
1545964912363,add,330,[
1545964912365,add,331,]
1545964912644,add,331,m
1545964912813,add,332,i
1545964912925,add,333,d
1545964913616,add,335," "
1545964914178,add,336,>
1545964914310,add,337," "
1545964914592,add,338,t
1545964914863,add,339,a
1545964915146,sub,339,a
1545964915270,add,339,r
1545964915743,sub,339,r
1545964915836,add,339,a
1545964915915,add,340,r
1545964916693,add,341,get
1545964916993,add,344,:
1545964917221,add,345,"
            "
1545964917230,add,358,"    "
1545964917515,add,362,h
1545964917662,add,363,i
1545964928188,add,364," "
1545964928350,add,365,=
1545964928514,add,366," "
1545964929444,add,367,m
1545964929798,add,368,i
1545964930192,add,369,d
1545964931125,add,370," "
1545964931658,add,371," "
1545964931790,add,372,-
1545964932004,sub,372,-
1545964932124,sub,371," "
1545964932382,add,371,-
1545964932528,add,372," "
1545964932755,add,373,1
1545964932890,add,374,"
                "
1545964933508,sub,390," "
1545964933510,sub,387,"   "
1545964934420,add,387,e
1545964934513,add,388,l
1545964934606,add,389,s
1545964934759,add,390,e
1545964936239,add,391,:
1545964936878,add,392,"
            "
1545964936886,add,405,"    "
1545964937129,add,409,l
1545964937353,add,410,o
1545964937539,add,411," "
1545964937729,add,412,=
1545964937833,add,413," "
1545964938011,add,414,m
1545964938125,add,415,i
1545964938251,add,416,d
1545964938555,add,417," "
1545964938955,add,418,+
1545964939097,add,419," "
1545964940146,add,420,1
1545964960232,add,212,=
1545964968516,add,422,"
                "
1545964968871,sub,438," "
1545964968873,sub,435,"   "
1545964969407,sub,434," "
1545964969410,sub,431,"   "
1545964969783,add,431,r
1545964969857,add,432,e
1545964970383,add,433,turn
1545964970396,add,437," "
1545964971282,add,438,-
1545964971469,add,439,1
1545964972481,add,440,"
        "
1545964972485,sub,445,"    "
1545964972868,add,445,"
    "
1545964973246,sub,449," "
1545964973248,sub,446,"   "
1545964974346,sub,441,"    "
1545964987905,add,442,"nums = [-1,0,3,5,9,12], target = 2"
1545964987911,paste,442,"nums = [-1,0,3,5,9,12], target = 2"
1545964988313,add,476,"
"
1545964996692,sub,449,"[-1,0,3,5,9,12]"
1545964996695,add,449,"(-1,0,3,5,9,12)"
1545964996748,add,453," "
1545964996750,add,456," "
1545964996752,add,459," "
1545964996754,add,462," "
1545964996756,add,465," "
1545964999665,sub,449,(
1545965000056,add,449,[
1545965001635,sub,468,)
1545965001972,add,468,]
1545965002759,add,470,\
1545965002761,add,471,"
"
1545965002769,add,473,"      "
1545965003526,sub,478," "
1545965003528,sub,476,"  "
1545965003701,sub,475," "
1545965003703,sub,472,"   "
1545965003885,sub,471,"
"
1545965004038,sub,470,\
1545965004301,sub,469,","
1545965004732,add,469,"
"
1545965019815,add,481,S
1545965020143,add,482,o
1545965022070,add,483,lution
1545965022453,add,489,.
1545965023273,add,490,search
1545965023286,add,496,(
1545965023292,add,497,)
1545965028209,add,497,n
1545965029010,add,498,ums
1545965029402,add,501,","
1545965030178,add,502," "
1545965030505,add,503,s
1545965030783,sub,503,s
1545965030866,add,503,t
1545965030995,add,504,a
1545965031470,add,505,rget
1545965047365,add,481,n
1545965047525,add,482,e
1545965047586,add,483,w
1545965047729,add,484," "
1545965049622,add,481,(
1545965051184,add,494,(
1545965051570,add,495,)
1545965051980,add,496,)
1545965066478,sub,481,"(new "
1545965068450,sub,491,)
1545965076272,add,512,"nums = [-1,0,3,5,9,12], target = 2"
1545965077889,sub,512,"nums = [-1,0,3,5,9,12], target = 2"
1545965083404,add,481,p
1545965083568,add,482,r
1545965083669,add,483,i
1545965083795,add,484,n
1545965083850,add,485,t
1545965084211,add,486,(
1545965085762,add,518,)
1545965092553,sub,479,2
1545965093084,add,479,9
1545965105441,copy,0,"class Solution:
    def search(self, nums, target):
        """"""
        :type nums: List[int]
        :type target: int
        :rtype: int
        """"""
        lo = 0
        hi = len(nums) - 1
        while lo <= hi:
            mid = (lo + hi)//2
            if nums[mid] == target:
                return mid
            if nums[mid] > target:
                hi = mid - 1
            else:
                lo = mid + 1
        return -1
"
1545965145271,add,519,"
"
1545965145438,add,520,t
1545965145652,add,521,a
1545965146025,add,522,rget
1545965146231,add,526," "
1545965146524,add,527,=
1545965146671,add,528," "
1545965146755,add,529,2
1545965149031,add,530,"print(Solution().search(nums, target))
target = 2"
1545965149064,sub,481,"print(Solution().search(nums, target))
target = 2"
1545965150264,add,530,"
"
1545965150635,add,531,p
1545965150997,add,532,r
1545965151450,add,533,int
1545965151479,add,536,(
1545965151480,add,537,)
1545965152607,add,537,S
1545965152869,add,538,o
1545965153177,add,539,lution
1545965153373,add,545,.
1545965154479,add,546,search
1545965154495,add,552,(
1545965154497,add,553,)
1545965157578,add,545,(
1545965158288,add,546,)
1545965160108,add,555,n
1545965160706,add,556,ums
1545965161013,add,559,","
1545965161154,add,560," "
1545965161406,add,561,t
1545965161955,add,562,arget
1545965178812,add,569,"
"
1545965179103,add,570,p
1545965179245,add,571,r
1545965180148,add,572,i
1545965180291,add,573,n
1545965180389,add,574,t
1545965180929,add,575,(
1545965180931,add,576,)
1545965183415,sub,569,"
print()"
